[{"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\index.js":"1","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\App.jsx":"2","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\reportWebVitals.js":"3","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Explore.jsx":"4","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Home.jsx":"5","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\InfoLocation.jsx":"6","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\AddHouse.jsx":"7","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\SearchForm.jsx":"8","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Suggested.jsx":"9","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Navigation.jsx":"10","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Location-SearchBar.jsx":"11"},{"size":528,"mtime":1612284168474,"results":"12","hashOfConfig":"13"},{"size":683,"mtime":1612284168420,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1612284168475,"results":"15","hashOfConfig":"13"},{"size":6135,"mtime":1613336573986,"results":"16","hashOfConfig":"13"},{"size":985,"mtime":1612284168467,"results":"17","hashOfConfig":"13"},{"size":13245,"mtime":1613337446769,"results":"18","hashOfConfig":"13"},{"size":8044,"mtime":1613333218179,"results":"19","hashOfConfig":"13"},{"size":1135,"mtime":1612284168468,"results":"20","hashOfConfig":"13"},{"size":4474,"mtime":1612284168468,"results":"21","hashOfConfig":"13"},{"size":1255,"mtime":1612284168468,"results":"22","hashOfConfig":"13"},{"size":1842,"mtime":1612284168467,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"6gjcik",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\index.js",[],["48","49"],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\App.jsx",[],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\reportWebVitals.js",[],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Explore.jsx",[],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Home.jsx",[],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\InfoLocation.jsx",["50"],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\AddHouse.jsx",["51"],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport \"../styling/AddHouse.scss\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nclass AddHouse extends React.Component {\r\n  state = {\r\n    newHouse: {\r\n      street: \"\",\r\n      city: this.props.match.params.location,\r\n      \"zip_code\": \"\",\r\n      \"province_county\": '',\r\n      country: \"\",\r\n      title: \"\",\r\n      description: \"\",\r\n      price: 0,\r\n      rooms: 0,\r\n      facilities: \"\",\r\n      host: \"\",\r\n      type: '',\r\n      img: ''\r\n    },\r\n  };\r\n  handleImages = async (e) => {\r\n    this.setState({ images: e.target.files[0] }, () =>\r\n      console.log(this.state.images)\r\n    );\r\n    let image = new FormData();\r\n    image.append(\"img\", this.state.images);\r\n    await this.setState({ img: image }, () => console.log(this.state.images));\r\n    try {\r\n      await fetch(\r\n        process.env.REACT_APP_BE_URL +\r\n          \"houses/\" +\r\n          this.props.match.params.location +\r\n          \"/\" +\r\n          this.props.match.params.id +\r\n          \"/upload\",\r\n        {\r\n          method: \"POST\",\r\n          body: this.state.img,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    if (\r\n      e.target.id !== \"street\" &&\r\n      e.target.id !== \"city\" &&\r\n      e.target.id !== \"zip code\" &&\r\n      e.target.id !== \"country\"\r\n    ) {\r\n      this.setState(\r\n        {\r\n          newHouse: {\r\n            ...this.state.newHouse,\r\n            [e.target.id]: e.currentTarget.value,\r\n          },\r\n        },\r\n        () => console.log(this.state.newHouse)\r\n      );\r\n    } else {\r\n      this.setState(\r\n        {\r\n          newHouse: {\r\n            ...this.state.newHouse,\r\n            address: {\r\n              ...this.state.newHouse.address,\r\n              [e.target.id]: e.currentTarget.value,\r\n            },\r\n          },\r\n        },\r\n        () => console.log(this.state.newHouse)\r\n      );\r\n    }\r\n  };\r\n\r\n  postHouse = async () => {\r\n    try {\r\n      const response = await fetch(process.env.REACT_APP_BE_URL + \"houses\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(this.state.newHouse),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {\" \"}\r\n        <Navigation />\r\n        <div className=\"add-wrap\">\r\n          <div className=\"form-wrap\">\r\n            <Form>\r\n              <h4>General info:</h4>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Name of the premise</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    id=\"title\"\r\n                    type=\"text\"\r\n                    placeholder=\"The small house\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Host name: </Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    id=\"host\"\r\n                    placeholder=\"John Doe\"\r\n                  />\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Group>\r\n                <Form.Label>Description: </Form.Label>\r\n                <Form.Control\r\n                  onChange={(e) => this.handleChange(e)}\r\n                  as=\"textarea\"\r\n                  placeholder=\"Describe your place...\"\r\n                  rows={5}\r\n                  id=\"description\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Price: </Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    type=\"number\"\r\n                    placeholder=\"xx/night\"\r\n                    id=\"price\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Rooms: </Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    type=\"number\"\r\n                    placeholder=\"2\"\r\n                    id=\"rooms\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Type:</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    as=\"select\"\r\n                    defaultValue=\"Apartment\"\r\n                    id=\"house\"\r\n                  >\r\n                    <option value=\"Apartment\">Apartment</option>\r\n                    <option value=\"House\">Independent House</option>\r\n                    <option value=\"Room\">Room</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Group>\r\n                <Form.Label>Facilities:</Form.Label>\r\n                <Form.Control\r\n                  onChange={(e) => this.handleChange(e)}\r\n                  as=\"textarea\"\r\n                  placeholder=\"List facilities, services next to the premise etc...\"\r\n                  rows={8}\r\n                  id=\"facilities\"\r\n                />\r\n              </Form.Group>\r\n              <h4>Address: </h4>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Street</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    placeholder=\"1234 Main St\"\r\n                    id=\"street\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>City</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    placeholder=\"Milan, London...\"\r\n                    value={this.props.match.params.location}\r\n                    disabled\r\n                  />\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>ZIP</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    placeholder=\"0000, XXN NXX...\"\r\n                    type=\"text\"\r\n                    id=\"zip code\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>State</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    type=\"text\"\r\n                    placeholder=\"Italy, UK, USA, France...\"\r\n                    id=\"country\"\r\n                  />\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Group>\r\n                <Form.Label>\r\n                  Add photos: (5 is the raccomended amount)\r\n                </Form.Label>{\" \"}\r\n                {/*unfortunately I could not make the multiple upload work on the\r\n                backend*/}\r\n                <Form>\r\n                  <Form.File.Input\r\n                    id=\"images\"\r\n                    label=\"Add an image here\"\r\n                    accept=\"image/x-png,image/gif,image/jpeg\"\r\n                    name=\"image\"\r\n                    enctype=\"multipart/form-data\"\r\n                    onChange={(e) => this.handleImages(e)}\r\n                  />\r\n                </Form>\r\n              </Form.Group>\r\n              <Button\r\n                variant=\"primary\"\r\n                className=\"add-btn\"\r\n                onClick={() => this.postHouse()}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(AddHouse);\r\n","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\SearchForm.jsx",[],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Suggested.jsx",[],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Navigation.jsx",[],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Location-SearchBar.jsx",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":362,"column":9,"nodeType":"58","endLine":371,"endColumn":10},{"ruleId":"59","severity":1,"message":"60","line":3,"column":16,"nodeType":"61","messageId":"62","endLine":3,"endColumn":19},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]