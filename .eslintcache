[{"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\index.js":"1","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\App.jsx":"2","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\reportWebVitals.js":"3","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\SearchForm.jsx":"4","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Suggested.jsx":"5","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Navigation.jsx":"6","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Location-SearchBar.jsx":"7","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Loader.jsx":"8","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\pages\\InfoLocation.jsx":"9","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\pages\\Explore.jsx":"10","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\pages\\AddHouse.jsx":"11","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\pages\\Home.jsx":"12","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\pages\\Login.jsx":"13","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\pages\\SignUp.jsx":"14"},{"size":521,"mtime":1613505174515,"results":"15","hashOfConfig":"16"},{"size":959,"mtime":1613498119148,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1612284168475,"results":"18","hashOfConfig":"16"},{"size":1592,"mtime":1613505297677,"results":"19","hashOfConfig":"16"},{"size":935,"mtime":1613506626611,"results":"20","hashOfConfig":"16"},{"size":1891,"mtime":1613508278391,"results":"21","hashOfConfig":"16"},{"size":1828,"mtime":1613508298793,"results":"22","hashOfConfig":"16"},{"size":458,"mtime":1613485733719,"results":"23","hashOfConfig":"16"},{"size":13430,"mtime":1613506097240,"results":"24","hashOfConfig":"16"},{"size":6084,"mtime":1613505669707,"results":"25","hashOfConfig":"16"},{"size":8048,"mtime":1613496869434,"results":"26","hashOfConfig":"16"},{"size":2242,"mtime":1613507326176,"results":"27","hashOfConfig":"16"},{"size":3044,"mtime":1613654863123,"results":"28","hashOfConfig":"16"},{"size":4175,"mtime":1613496904996,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"6gjcik",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\index.js",[],["65","66"],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\App.jsx",[],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\reportWebVitals.js",[],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\SearchForm.jsx",[],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Suggested.jsx",[],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Navigation.jsx",["67","68"],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../styling/Navigation.scss\";\r\nimport Logo from \"../assets/logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiGlobe } from \"react-icons/bi\";\r\nimport { VscThreeBars } from \"react-icons/vsc\";\r\nimport { IoPersonCircleSharp } from \"react-icons/io5\";\r\n\r\nclass Navigation extends React.Component {\r\n  state = {\r\n    logged: {}\r\n  }\r\n  componentDidMount = async () => {\r\n    const response = await fetch(\r\n      process.env.REACT_APP_BE_URL + \"user/login/me\", {\r\n        method: 'GET',\r\n        headers: {\r\n          authorization: `Basic ${localStorage.getItem('base64')}`\r\n        }\r\n      }\r\n    );\r\n    if (response.ok) {\r\n      let logged = await response.json();\r\n      this.setState({ logged: logged });\r\n    } else this.setState({ logged: {} });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"nav-wrap\">\r\n        <div className=\"logo-wrap\">\r\n          <Link to=\"/\">\r\n            <img src={Logo} alt=\"airbnb\" className=\"logo\" />{\" \"}\r\n          </Link>\r\n        </div>\r\n        <div className=\"navigation-titles\">\r\n          <div className=\"title\">Places to stay</div>\r\n          <div className=\"title\">Experiences</div>\r\n          <div className=\"title\">Online Experiences</div>\r\n        </div>\r\n        <div className=\"profile-become-host\">\r\n          <div className=\"become-a-host\">Become a host</div>\r\n          <BiGlobe className=\"languages\" />\r\n          <div className=\"profile-wrap\">\r\n            <VscThreeBars className=\"three-bars-icon\" />\r\n            <Link to={localStorage.getItem('base64') ? \"/genova\" : \"/admin/manage/login\"}>\r\n              <img src={this.state.logged ? this.state.logged.img : 'http://placehold.it/150x150'} className=\"profile-icon\" />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Navigation;\r\n","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Location-SearchBar.jsx",[],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Loader.jsx",[],["69","70"],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\pages\\InfoLocation.jsx",["71","72"],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport \"../../styling/InfoLocation.scss\";\r\nimport moment from \"moment\";\r\nimport NavLocation from \"../Location-SearchBar\";\r\nimport ProPic from \"../../assets/propic.png\";\r\nimport {\r\n  IoShareOutline,\r\n  IoCalendarOutline,\r\n  IoBookOutline,\r\n} from \"react-icons/io5\";\r\nimport { AiOutlineHeart, AiFillStar } from \"react-icons/ai\";\r\nimport { CgHome } from \"react-icons/cg\";\r\n\r\nimport { HiOutlineSparkles, HiOutlineLocationMarker } from \"react-icons/hi\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass InfoLocation extends React.Component {\r\n  state = {\r\n    house: {},\r\n    address: {},\r\n    images: \"\",\r\n    query: \"\",\r\n    reviews: [],\r\n    average: 0,\r\n    newReview: {\r\n      user: \"\",\r\n      rating: 0,\r\n      review: \"\",\r\n      houseID: this.props.match.params.id,\r\n    },\r\n    user: {\r\n      id: 1,\r\n    },\r\n  };\r\n  bookHouse = async () => {\r\n    try {\r\n      await fetch(\r\n        process.env.REACT_APP_BE_URL +\r\n          \"booking/\" +\r\n          this.props.match.params.id +\r\n          \"/\" +\r\n          this.state.user.id,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            houseId: this.props.match.params.id,\r\n            userId: this.state.user.id,\r\n            dateStart: this.state.dateStart,\r\n            dateEnd: this.state.dateEnd,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  getRating = async () => {\r\n    let reviewsDB = await fetch(\r\n      process.env.REACT_APP_BE_URL + \"reviews/\" + this.props.match.params.id\r\n    );\r\n    console.log(reviewsDB);\r\n    if (reviewsDB.ok) {\r\n      let reviews = await reviewsDB.json();\r\n      console.log(reviews);\r\n      this.setState({ reviews: reviews });\r\n      let average =\r\n        reviews.map((rev) => rev.rate).reduce((a, b) => a + b, 0) /\r\n        reviews.length;\r\n      this.setState({ average: average }, ()=> console.log(this.state.average));\r\n    } else {\r\n      this.setState({ reviews: \"No reviews\" });\r\n    }\r\n    let userDB = await fetch(process.env.REACT_APP_BE_URL + 'user/', {\r\n      method: 'GET', \r\n      headers: {authorization: `Basic ${localStorage.getItem('base64')}`}\r\n    })\r\n  };\r\n  getDetails = async () => {\r\n    let housesRes = await fetch(\r\n      process.env.REACT_APP_BE_URL +\r\n        \"houses/\" +\r\n        this.props.match.params.location +\r\n        \"/\" +\r\n        this.props.match.params.id\r\n    );\r\n    let house = await housesRes.json();\r\n    this.setState({ house: house[0] });\r\n    this.setState({\r\n      address: {\r\n        city: this.state.house.city,\r\n        zip_code: this.state.house.zip_code,\r\n        country: this.state.house.country,\r\n        province: this.state.house.province_county\r\n          ? this.state.house.province_county\r\n          : null,\r\n      },\r\n    });\r\n    let query = `${this.state.house.zip_code}+${this.state.house.city}`;\r\n    this.setState({ query: query });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState(\r\n      {\r\n        newReview: {\r\n          ...this.state.newReview,\r\n          [e.target.id]: e.currentTarget.value,\r\n        },\r\n      },\r\n      () => console.log(this.state.newReview)\r\n    );\r\n  };\r\n\r\n  postReview = async () => {\r\n    const response = await fetch(\r\n      process.env.REACT_APP_BE_URL + \"reviews/\" + this.props.match.params.id,\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          ...this.state.newReview,\r\n          userId: this.state.user.id,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    console.log(response);\r\n    await this.getDetails();\r\n    this.getRating();\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    await this.getDetails();\r\n    this.getRating();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"page-wrap\">\r\n        <NavLocation />\r\n        <div className=\"info-wrap\">\r\n          <div className=\"wrap\">\r\n            <div className=\"name\">{this.state.house.title}</div>\r\n            <div className=\"rating-line\">\r\n              <div>\r\n                <strong>{this.state.average}</strong>,{\" \"}\r\n                {this.state.reviews.length} ratings ∙{\" \"}\r\n                {this.state.address.city && this.state.address.city}\r\n              </div>\r\n              <div className=\"save-share\">\r\n                <div className=\"pr-3\">\r\n                  <IoShareOutline /> Share\r\n                </div>\r\n                <div className=\"pr-3\">\r\n                  <AiOutlineHeart /> Save\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"showcase\">\r\n              <div className=\"big-picture\">\r\n                <img alt=\"img\" src={this.state.images[0]} />\r\n              </div>\r\n              <div className=\"small-pictures\">\r\n                <img alt=\"img\" src={this.state.images[1]} />\r\n                <img alt=\"img\" src={this.state.images[2]} />\r\n                <img alt=\"img\" src={this.state.images[3]} />\r\n                <img alt=\"img\" src={this.state.images[4]} />\r\n              </div>\r\n            </div>\r\n            <div className=\"info-row\">\r\n              <div className=\"info-col\">\r\n                <div className=\"type-and-host\">\r\n                  {this.state.house.type} - Host: {this.state.house.host ? this.state.house.host : 'HIDDEN HOST' }\r\n                </div>\r\n                <div className=\"guests-and-rooms\">\r\n                  {this.state.house.rooms} rooms ∙ {this.state.house.facilities}\r\n                </div>\r\n                <div className=\"host-details\">Show host details</div>\r\n                <div className=\"services\">\r\n                  <div className=\"single-service\">\r\n                    <div className=\"service-icon\">\r\n                      <CgHome className=\"icon\" />\r\n                    </div>\r\n                    <div className=\"service-info\">\r\n                      <div className=\"title\">{this.state.house.type}</div>\r\n                      <div className=\"description\">\r\n                        You will have the whole premise for you.\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"single-service\">\r\n                    <div className=\"service-icon\">\r\n                      <HiOutlineSparkles className=\"icon\" />\r\n                    </div>\r\n                    <div className=\"service-info\">\r\n                      <div className=\"title\">Advanced cleaning methods</div>\r\n                      <div className=\"description\">\r\n                        The host is committing to our 5-step cleaning process.\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"single-service\">\r\n                    <div className=\"service-icon\">\r\n                      <HiOutlineLocationMarker className=\"icon\" />\r\n                    </div>\r\n                    <div className=\"service-info\">\r\n                      <div className=\"title\">{this.state.address.city}</div>\r\n                      <div className=\"description\">{this.state.address.zip_code}</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"single-service\">\r\n                    <div className=\"service-icon\">\r\n                      <IoCalendarOutline className=\"icon\" />\r\n                    </div>\r\n                    <div className=\"service-info\">\r\n                      <div className=\"title\">Cancellation terms and fees</div>\r\n                      <div className=\"description\">\r\n                        Add your travel dates to know details about cancellation\r\n                        fees and terms.\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"single-service\">\r\n                    <div className=\"service-icon\">\r\n                      <IoBookOutline className=\"icon\" />\r\n                    </div>\r\n                    <div className=\"service-info\">\r\n                      <div className=\"title\">Rules of the house</div>\r\n                      <div className=\"description\">\r\n                        It's forbidden to host parties, bring animals and smoke.{\" \"}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"check-if-available\">\r\n                <div className=\"row-availability\">\r\n                  <div className=\"text\">Add dates to see the prices</div>\r\n                  <div className=\"rating-check-available\">\r\n                    <AiFillStar\r\n                      style={{ color: \"#FF385C\", marginRight: \"10px\" }}\r\n                    />\r\n                    {this.state.average}.0, {this.state.reviews.length} reviews\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-row-check-in-out\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"date-picker\"\r\n                    id=\"checkin\"\r\n                    onChange={(e) =>\r\n                      this.setState({ dateStart: e.target.value })\r\n                    }\r\n                  />\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"date-picker\"\r\n                    id=\"checkout\"\r\n                    onChange={(e) => this.setState({ dateEnd: e.target.value })}\r\n                  />\r\n                </div>\r\n                <div className=\"guests-input\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"guests-counter\"\r\n                    placeholder=\"Guests\"\r\n                  />\r\n                </div>\r\n                <div\r\n                  className=\"check-btn\"\r\n                  onClick={() => {\r\n                    this.bookHouse();\r\n                  }}\r\n                >\r\n                  <div>\r\n                    {this.state.house.isBooked ? \"Cancel Booking\" : \"Book\"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"reviews-wrap\">\r\n          <Form>\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Name\"\r\n                  id=\"user\"\r\n                  onChange={(e) => this.handleChange(e)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Rating</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  defaultValue=\"Choose a rating\"\r\n                  className=\"w-50\"\r\n                  id=\"rate\"\r\n                  onChange={(e) => this.handleChange(e)}\r\n                >\r\n                  <option value={1}>★</option>\r\n                  <option value={2}>★★</option>\r\n                  <option value={3}>★★★</option>\r\n                  <option value={4}>★★★★</option>\r\n                  <option value={5}>★★★★★</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Review</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"Type in your review\"\r\n                className=\"w-75\"\r\n                rows={8}\r\n                style={{ resize: \"none\" }}\r\n                id=\"text\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button\r\n              type=\"button\"\r\n              style={{ backgroundColor: \"#FF385C\", border: \"none\" }}\r\n              onClick={() => this.postReview()}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n        <div className=\"reviews-showdown\">\r\n          {this.state.reviews instanceof Array\r\n            ? this.state.reviews.map((rev) => (\r\n                <div className=\"review-single\">\r\n                  <div className=\"review-single-header\">\r\n                    <img alt=\"img\" src={ProPic} className=\"reviews-pp\" />\r\n                    <div className=\"review-single-info\">\r\n                      <div className=\"name\">{rev.user}</div>\r\n                      <div className=\"review-date\">\r\n                        {moment(rev.createdAt).format(\"MMM YYYY\")}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"review-text\">\r\n                    {rev.rate}\r\n                    <AiFillStar\r\n                      style={{ color: \"#FF385C\", marginRight: \"10px\" }}\r\n                    />{\" \"}\r\n                    {rev.text}\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : \"There are no reviews yet!\"}\r\n        </div>\r\n        <iframe\r\n          className=\"map\"\r\n          src={\r\n            \"https://www.google.com/maps/embed/v1/place?key=\" +\r\n            process.env.REACT_APP_MAPS_API_KEY +\r\n            \"&q=\" +\r\n            this.state.query\r\n          }\r\n          allowfullscreen\r\n        ></iframe>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(InfoLocation);\r\n","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\pages\\Explore.jsx",[],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\pages\\AddHouse.jsx",["73"],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport \"../../styling/AddHouse.scss\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Navigation from \"../Navigation\";\r\n\r\nclass AddHouse extends React.Component {\r\n  state = {\r\n    newHouse: {\r\n      street: \"\",\r\n      city: this.props.match.params.location,\r\n      \"zip_code\": \"\",\r\n      \"province_county\": '',\r\n      country: \"\",\r\n      title: \"\",\r\n      description: \"\",\r\n      price: 0,\r\n      rooms: 0,\r\n      facilities: \"\",\r\n      host: \"\",\r\n      type: '',\r\n      img: ''\r\n    },\r\n  };\r\n  handleImages = async (e) => {\r\n    this.setState({ images: e.target.files[0] }, () =>\r\n      console.log(this.state.images)\r\n    );\r\n    let image = new FormData();\r\n    image.append(\"img\", this.state.images);\r\n    await this.setState({ img: image }, () => console.log(this.state.images));\r\n    try {\r\n      await fetch(\r\n        process.env.REACT_APP_BE_URL +\r\n          \"houses/\" +\r\n          this.props.match.params.location +\r\n          \"/\" +\r\n          this.props.match.params.id +\r\n          \"/upload\",\r\n        {\r\n          method: \"POST\",\r\n          body: this.state.img,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    if (\r\n      e.target.id !== \"street\" &&\r\n      e.target.id !== \"city\" &&\r\n      e.target.id !== \"zip code\" &&\r\n      e.target.id !== \"country\"\r\n    ) {\r\n      this.setState(\r\n        {\r\n          newHouse: {\r\n            ...this.state.newHouse,\r\n            [e.target.id]: e.currentTarget.value,\r\n          },\r\n        },\r\n        () => console.log(this.state.newHouse)\r\n      );\r\n    } else {\r\n      this.setState(\r\n        {\r\n          newHouse: {\r\n            ...this.state.newHouse,\r\n            address: {\r\n              ...this.state.newHouse.address,\r\n              [e.target.id]: e.currentTarget.value,\r\n            },\r\n          },\r\n        },\r\n        () => console.log(this.state.newHouse)\r\n      );\r\n    }\r\n  };\r\n\r\n  postHouse = async () => {\r\n    try {\r\n      const response = await fetch(process.env.REACT_APP_BE_URL + \"houses\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(this.state.newHouse),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {\" \"}\r\n        <Navigation />\r\n        <div className=\"add-wrap\">\r\n          <div className=\"form-wrap\">\r\n            <Form>\r\n              <h4>General info:</h4>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Name of the premise</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    id=\"title\"\r\n                    type=\"text\"\r\n                    placeholder=\"The small house\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Host name: </Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    id=\"host\"\r\n                    placeholder=\"John Doe\"\r\n                  />\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Group>\r\n                <Form.Label>Description: </Form.Label>\r\n                <Form.Control\r\n                  onChange={(e) => this.handleChange(e)}\r\n                  as=\"textarea\"\r\n                  placeholder=\"Describe your place...\"\r\n                  rows={5}\r\n                  id=\"description\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Price: </Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    type=\"number\"\r\n                    placeholder=\"xx/night\"\r\n                    id=\"price\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Rooms: </Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    type=\"number\"\r\n                    placeholder=\"2\"\r\n                    id=\"rooms\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Type:</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    as=\"select\"\r\n                    defaultValue=\"Apartment\"\r\n                    id=\"house\"\r\n                  >\r\n                    <option value=\"Apartment\">Apartment</option>\r\n                    <option value=\"House\">Independent House</option>\r\n                    <option value=\"Room\">Room</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Group>\r\n                <Form.Label>Facilities:</Form.Label>\r\n                <Form.Control\r\n                  onChange={(e) => this.handleChange(e)}\r\n                  as=\"textarea\"\r\n                  placeholder=\"List facilities, services next to the premise etc...\"\r\n                  rows={8}\r\n                  id=\"facilities\"\r\n                />\r\n              </Form.Group>\r\n              <h4>Address: </h4>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Street</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    placeholder=\"1234 Main St\"\r\n                    id=\"street\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>City</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    placeholder=\"Milan, London...\"\r\n                    value={this.props.match.params.location}\r\n                    disabled\r\n                  />\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>ZIP</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    placeholder=\"0000, XXN NXX...\"\r\n                    type=\"text\"\r\n                    id=\"zip code\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>State</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    type=\"text\"\r\n                    placeholder=\"Italy, UK, USA, France...\"\r\n                    id=\"country\"\r\n                  />\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Group>\r\n                <Form.Label>\r\n                  Add photos: (5 is the raccomended amount)\r\n                </Form.Label>{\" \"}\r\n                {/*unfortunately I could not make the multiple upload work on the\r\n                backend*/}\r\n                <Form>\r\n                  <Form.File.Input\r\n                    id=\"images\"\r\n                    label=\"Add an image here\"\r\n                    accept=\"image/x-png,image/gif,image/jpeg\"\r\n                    name=\"image\"\r\n                    enctype=\"multipart/form-data\"\r\n                    onChange={(e) => this.handleImages(e)}\r\n                  />\r\n                </Form>\r\n              </Form.Group>\r\n              <Button\r\n                variant=\"primary\"\r\n                className=\"add-btn\"\r\n                onClick={() => this.postHouse()}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(AddHouse);\r\n","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\pages\\Home.jsx",[],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\pages\\Login.jsx",["74","75"],"import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../styling/Login.scss\";\r\nimport Google from '../../assets/google-logo.png'\r\nimport Facebook from '../../assets/fb-logo.png'\r\nimport GitHub from '../../assets/github-logo.png'\r\nimport LinkedIn from '../../assets/linkedin-logo.png'\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport Loader from \"../Loader\";\r\nimport axios from 'axios'\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pass, setPW] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const login = async ()=> {\r\n    const res = await axios(`${process.env.REACT_APP_BE_URL}login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: {\r\n        email, pass\r\n      }, withCredentials: true // use cookies\r\n    })\r\n\r\n    localStorage.setItem(\"accessToken\", res.data.accessToken)\r\n  }\r\n  return (\r\n    <div className=\"login-wrap\">\r\n      {loading ?  \r\n    \r\n      <Loader/> \r\n    \r\n      :\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else. <br />\r\n            (Unless your password is the same of Netflix, then I will use your\r\n            account <br /> to watch Brooklyn 99 for the 10th time.)\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            value={pass}\r\n            onChange={(e) => setPW(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            label=\"I swear this is not my Netflix's password\"\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\" onClick={(e) => login(e)}>\r\n          Login\r\n        </Button>\r\n        \r\n        <br/>\r\n        <div className='d-block text-center'>- or -</div> <br/>\r\n      <div className='d-flex text-center justify-content-around'> <a  href={`${process.env.REACT_APP_BE_URL}user/login/google`}><img src={Google} alt='google-login' className='login-logo'/></a> \r\n        <img src={Facebook} alt='google-login' className='login-logo'/> \r\n        <img src={LinkedIn} alt='google-login' className='login-logo'/> \r\n        <img src={GitHub} alt='google-login' className='login-logo'/></div> <br/>\r\n        <Link  className='new-to-airbnb text-center' to='/admin/manage/new'>New to AirBnB?</Link>\r\n        <div><small>Forgot your password? That's too bad man.</small></div>\r\n      </Form>}\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\pages\\SignUp.jsx",["76"],"import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../styling/Register.scss\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Form, Button, Row } from \"react-bootstrap\";\r\nimport Loader from \"../Loader\";\r\nconst Register = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [last_name, setLName] = useState(\"\");\r\n  const [pass, setPW] = useState(\"\");\r\n  const [file, setFile] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const signup = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const user = {\r\n      name: name,\r\n      last_name: last_name,\r\n      password: pass, //will be hashed by the b-e\r\n      email: email,\r\n      role: \"basic\",\r\n    };\r\n    const base64data = btoa(email + \":\" + pass); // encoding in base64\r\n    const fd = new FormData();\r\n    console.log(file);\r\n    fd.append(\"user-image\", file); //do not await\r\n    fd.append(\"name\", name);\r\n    fd.append(\"last_name\", last_name);\r\n    fd.append(\"password\", pass);\r\n    fd.append(\"email\", email);\r\n    fd.append(\"role\", \"basic\");\r\n    console.log([...fd]);\r\n    const resp = await fetch(\"http://localhost:3001/user\", {\r\n      method: \"POST\",\r\n      body: fd,\r\n      //redirect: 'follow'\r\n    });\r\n\r\n    if (resp.ok) {\r\n      setLoading(false);\r\n      localStorage.setItem(\"base64\", base64data);\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-wrap\">\r\n      <div className=\"login-wrap\">\r\n        {loading ? (\r\n          <>\r\n            {\" \"}\r\n            <div>Loggin-in, please wait</div>\r\n            <Loader />\r\n          </>\r\n        ) : (\r\n          <Form className=\"w-50 d-flex flex-column justify-content-center\">\r\n            <Row className=\"d-flex justify-content-center\">\r\n              <Form.Group className=\"mr-1 w-50\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"john@family.biz\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mr-1 w-50\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"********\"\r\n                  value={pass}\r\n                  onChange={(e) => setPW(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Row>\r\n            <Row className=\"d-flex flex-row justify-content-center\">\r\n              <Form.Group className=\"mr-1 w-50\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"John\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mr-1 w-50\">\r\n                <Form.Label>Last name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Winchester\"\r\n                  value={last_name}\r\n                  onChange={(e) => setLName(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.File\r\n                id=\"custom-file\"\r\n                label=\"Custom file input\"\r\n                custom\r\n                onChange={(e) => setFile(e.target.files[0])}\r\n              />\r\n            </Row>\r\n            <div className=\"button-submit\">\r\n              <Button\r\n                className=\"w-25 btn-sub\"\r\n                type=\"submit\"\r\n                onClick={(e) => signup(e)}\r\n              >\r\n                Create account\r\n              </Button>\r\n            </div>\r\n\r\n            <br />\r\n            <Link\r\n              className=\"new-to-airbnb text-center\"\r\n              to=\"/admin/manage/login\"\r\n            >\r\n              Already on AirBnB?\r\n            </Link>\r\n          </Form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Register;\r\n",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":8,"column":10,"nodeType":"83","messageId":"84","endLine":8,"endColumn":29},{"ruleId":"85","severity":1,"message":"86","line":47,"column":15,"nodeType":"87","endLine":47,"endColumn":127},{"ruleId":"77","replacedBy":"88"},{"ruleId":"79","replacedBy":"89"},{"ruleId":"81","severity":1,"message":"90","line":78,"column":9,"nodeType":"83","messageId":"84","endLine":78,"endColumn":15},{"ruleId":"91","severity":1,"message":"92","line":366,"column":9,"nodeType":"87","endLine":375,"endColumn":10},{"ruleId":"81","severity":1,"message":"93","line":3,"column":16,"nodeType":"83","messageId":"84","endLine":3,"endColumn":19},{"ruleId":"81","severity":1,"message":"94","line":16,"column":19,"nodeType":"83","messageId":"84","endLine":16,"endColumn":29},{"ruleId":"81","severity":1,"message":"95","line":17,"column":9,"nodeType":"83","messageId":"84","endLine":17,"endColumn":16},{"ruleId":"81","severity":1,"message":"96","line":18,"column":11,"nodeType":"83","messageId":"84","endLine":18,"endColumn":15},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'IoPersonCircleSharp' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["97"],["98"],"'userDB' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Row' is defined but never used.","'setLoading' is assigned a value but never used.","'history' is assigned a value but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]