[{"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\index.js":"1","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\App.jsx":"2","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\reportWebVitals.js":"3","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Explore.jsx":"4","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Home.jsx":"5","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\InfoLocation.jsx":"6","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\AddHouse.jsx":"7","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\SearchForm.jsx":"8","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Suggested.jsx":"9","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Navigation.jsx":"10","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Location-SearchBar.jsx":"11","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Login.jsx":"12"},{"size":528,"mtime":1612284168474,"results":"13","hashOfConfig":"14"},{"size":800,"mtime":1613485048221,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1612284168475,"results":"16","hashOfConfig":"14"},{"size":6135,"mtime":1613336573986,"results":"17","hashOfConfig":"14"},{"size":985,"mtime":1612284168467,"results":"18","hashOfConfig":"14"},{"size":13245,"mtime":1613337446769,"results":"19","hashOfConfig":"14"},{"size":8044,"mtime":1613333218179,"results":"20","hashOfConfig":"14"},{"size":1135,"mtime":1612284168468,"results":"21","hashOfConfig":"14"},{"size":4474,"mtime":1612284168468,"results":"22","hashOfConfig":"14"},{"size":1293,"mtime":1613485080046,"results":"23","hashOfConfig":"14"},{"size":1842,"mtime":1612284168467,"results":"24","hashOfConfig":"14"},{"size":1105,"mtime":1613485181385,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"6gjcik",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\index.js",[],["53","54"],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\App.jsx",[],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\reportWebVitals.js",[],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Explore.jsx",[],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Home.jsx",[],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\InfoLocation.jsx",["55"],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport \"../styling/InfoLocation.scss\";\r\nimport moment from \"moment\";\r\nimport NavLocation from \"./Location-SearchBar\";\r\nimport ProPic from \"../assets/propic.png\";\r\nimport {\r\n  IoShareOutline,\r\n  IoCalendarOutline,\r\n  IoBookOutline,\r\n} from \"react-icons/io5\";\r\nimport { AiOutlineHeart, AiFillStar } from \"react-icons/ai\";\r\nimport { CgHome } from \"react-icons/cg\";\r\n\r\nimport { HiOutlineSparkles, HiOutlineLocationMarker } from \"react-icons/hi\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass InfoLocation extends React.Component {\r\n  state = {\r\n    house: {},\r\n    address: {},\r\n    images: \"\",\r\n    query: \"\",\r\n    reviews: [],\r\n    average: 0,\r\n    newReview: {\r\n      user: \"\",\r\n      rating: 0,\r\n      review: \"\",\r\n      houseID: this.props.match.params.id,\r\n    },\r\n    user: {\r\n      id: 1,\r\n    },\r\n  };\r\n  bookHouse = async () => {\r\n    try {\r\n      await fetch(\r\n        process.env.REACT_APP_BE_URL +\r\n          \"booking/\" +\r\n          this.props.match.params.id +\r\n          \"/\" +\r\n          this.state.user.id,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            houseId: this.props.match.params.id,\r\n            userId: this.state.user.id,\r\n            dateStart: this.state.dateStart,\r\n            dateEnd: this.state.dateEnd,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  getRating = async () => {\r\n    let reviewsDB = await fetch(\r\n      process.env.REACT_APP_BE_URL + \"reviews/\" + this.props.match.params.id\r\n    );\r\n    console.log(reviewsDB);\r\n    if (reviewsDB.ok) {\r\n      let reviews = await reviewsDB.json();\r\n      console.log(reviews);\r\n      this.setState({ reviews: reviews });\r\n      let average =\r\n        reviews.map((rev) => rev.rate).reduce((a, b) => a + b, 0) /\r\n        reviews.length;\r\n      this.setState({ average: average }, ()=> console.log(this.state.average));\r\n    } else {\r\n      this.setState({ reviews: \"No reviews\" });\r\n    }\r\n  };\r\n  getDetails = async () => {\r\n    let housesRes = await fetch(\r\n      process.env.REACT_APP_BE_URL +\r\n        \"houses/\" +\r\n        this.props.match.params.location +\r\n        \"/\" +\r\n        this.props.match.params.id\r\n    );\r\n    let house = await housesRes.json();\r\n    this.setState({ house: house[0] });\r\n    this.setState({\r\n      address: {\r\n        city: this.state.house.city,\r\n        zip_code: this.state.house.zip_code,\r\n        country: this.state.house.country,\r\n        province: this.state.house.province_county\r\n          ? this.state.house.province_county\r\n          : null,\r\n      },\r\n    });\r\n    let query = `${this.state.house.zip_code}+${this.state.house.city}`;\r\n    this.setState({ query: query });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState(\r\n      {\r\n        newReview: {\r\n          ...this.state.newReview,\r\n          [e.target.id]: e.currentTarget.value,\r\n        },\r\n      },\r\n      () => console.log(this.state.newReview)\r\n    );\r\n  };\r\n\r\n  postReview = async () => {\r\n    const response = await fetch(\r\n      process.env.REACT_APP_BE_URL + \"reviews/\" + this.props.match.params.id,\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          ...this.state.newReview,\r\n          userId: this.state.user.id,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    console.log(response);\r\n    await this.getDetails();\r\n    this.getRating();\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    await this.getDetails();\r\n    this.getRating();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"page-wrap\">\r\n        <NavLocation />\r\n        <div className=\"info-wrap\">\r\n          <div className=\"wrap\">\r\n            <div className=\"name\">{this.state.house.title}</div>\r\n            <div className=\"rating-line\">\r\n              <div>\r\n                <strong>{this.state.average}</strong>,{\" \"}\r\n                {this.state.reviews.length} ratings ∙{\" \"}\r\n                {this.state.address.city && this.state.address.city}\r\n              </div>\r\n              <div className=\"save-share\">\r\n                <div className=\"pr-3\">\r\n                  <IoShareOutline /> Share\r\n                </div>\r\n                <div className=\"pr-3\">\r\n                  <AiOutlineHeart /> Save\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"showcase\">\r\n              <div className=\"big-picture\">\r\n                <img alt=\"img\" src={this.state.images[0]} />\r\n              </div>\r\n              <div className=\"small-pictures\">\r\n                <img alt=\"img\" src={this.state.images[1]} />\r\n                <img alt=\"img\" src={this.state.images[2]} />\r\n                <img alt=\"img\" src={this.state.images[3]} />\r\n                <img alt=\"img\" src={this.state.images[4]} />\r\n              </div>\r\n            </div>\r\n            <div className=\"info-row\">\r\n              <div className=\"info-col\">\r\n                <div className=\"type-and-host\">\r\n                  {this.state.house.type} - Host: {this.state.house.host ? this.state.house.host : 'HIDDEN HOST' }\r\n                </div>\r\n                <div className=\"guests-and-rooms\">\r\n                  {this.state.house.rooms} rooms ∙ {this.state.house.facilities}\r\n                </div>\r\n                <div className=\"host-details\">Show host details</div>\r\n                <div className=\"services\">\r\n                  <div className=\"single-service\">\r\n                    <div className=\"service-icon\">\r\n                      <CgHome className=\"icon\" />\r\n                    </div>\r\n                    <div className=\"service-info\">\r\n                      <div className=\"title\">{this.state.house.type}</div>\r\n                      <div className=\"description\">\r\n                        You will have the whole premise for you.\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"single-service\">\r\n                    <div className=\"service-icon\">\r\n                      <HiOutlineSparkles className=\"icon\" />\r\n                    </div>\r\n                    <div className=\"service-info\">\r\n                      <div className=\"title\">Advanced cleaning methods</div>\r\n                      <div className=\"description\">\r\n                        The host is committing to our 5-step cleaning process.\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"single-service\">\r\n                    <div className=\"service-icon\">\r\n                      <HiOutlineLocationMarker className=\"icon\" />\r\n                    </div>\r\n                    <div className=\"service-info\">\r\n                      <div className=\"title\">{this.state.address.city}</div>\r\n                      <div className=\"description\">{this.state.address.zip_code}</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"single-service\">\r\n                    <div className=\"service-icon\">\r\n                      <IoCalendarOutline className=\"icon\" />\r\n                    </div>\r\n                    <div className=\"service-info\">\r\n                      <div className=\"title\">Cancellation terms and fees</div>\r\n                      <div className=\"description\">\r\n                        Add your travel dates to know details about cancellation\r\n                        fees and terms.\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"single-service\">\r\n                    <div className=\"service-icon\">\r\n                      <IoBookOutline className=\"icon\" />\r\n                    </div>\r\n                    <div className=\"service-info\">\r\n                      <div className=\"title\">Rules of the house</div>\r\n                      <div className=\"description\">\r\n                        It's forbidden to host parties, bring animals and smoke.{\" \"}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"check-if-available\">\r\n                <div className=\"row-availability\">\r\n                  <div className=\"text\">Add dates to see the prices</div>\r\n                  <div className=\"rating-check-available\">\r\n                    <AiFillStar\r\n                      style={{ color: \"#FF385C\", marginRight: \"10px\" }}\r\n                    />\r\n                    {this.state.average}.0, {this.state.reviews.length} reviews\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-row-check-in-out\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"date-picker\"\r\n                    id=\"checkin\"\r\n                    onChange={(e) =>\r\n                      this.setState({ dateStart: e.target.value })\r\n                    }\r\n                  />\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"date-picker\"\r\n                    id=\"checkout\"\r\n                    onChange={(e) => this.setState({ dateEnd: e.target.value })}\r\n                  />\r\n                </div>\r\n                <div className=\"guests-input\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"guests-counter\"\r\n                    placeholder=\"Guests\"\r\n                  />\r\n                </div>\r\n                <div\r\n                  className=\"check-btn\"\r\n                  onClick={() => {\r\n                    this.bookHouse();\r\n                  }}\r\n                >\r\n                  <div>\r\n                    {this.state.house.isBooked ? \"Cancel Booking\" : \"Book\"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"reviews-wrap\">\r\n          <Form>\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Name\"\r\n                  id=\"user\"\r\n                  onChange={(e) => this.handleChange(e)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Rating</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  defaultValue=\"Choose a rating\"\r\n                  className=\"w-50\"\r\n                  id=\"rate\"\r\n                  onChange={(e) => this.handleChange(e)}\r\n                >\r\n                  <option value={1}>★</option>\r\n                  <option value={2}>★★</option>\r\n                  <option value={3}>★★★</option>\r\n                  <option value={4}>★★★★</option>\r\n                  <option value={5}>★★★★★</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Review</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"Type in your review\"\r\n                className=\"w-75\"\r\n                rows={8}\r\n                style={{ resize: \"none\" }}\r\n                id=\"text\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button\r\n              type=\"button\"\r\n              style={{ backgroundColor: \"#FF385C\", border: \"none\" }}\r\n              onClick={() => this.postReview()}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n        <div className=\"reviews-showdown\">\r\n          {this.state.reviews instanceof Array\r\n            ? this.state.reviews.map((rev) => (\r\n                <div className=\"review-single\">\r\n                  <div className=\"review-single-header\">\r\n                    <img alt=\"img\" src={ProPic} className=\"reviews-pp\" />\r\n                    <div className=\"review-single-info\">\r\n                      <div className=\"name\">{rev.user}</div>\r\n                      <div className=\"review-date\">\r\n                        {moment(rev.createdAt).format(\"MMM YYYY\")}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"review-text\">\r\n                    {rev.rate}\r\n                    <AiFillStar\r\n                      style={{ color: \"#FF385C\", marginRight: \"10px\" }}\r\n                    />{\" \"}\r\n                    {rev.text}\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : \"There are no reviews yet!\"}\r\n        </div>\r\n        <iframe\r\n          className=\"map\"\r\n          src={\r\n            \"https://www.google.com/maps/embed/v1/place?key=\" +\r\n            process.env.REACT_APP_MAPS_API_KEY +\r\n            \"&q=\" +\r\n            this.state.query\r\n          }\r\n          allowfullscreen\r\n        ></iframe>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(InfoLocation);\r\n","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\AddHouse.jsx",["56"],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport \"../styling/AddHouse.scss\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nclass AddHouse extends React.Component {\r\n  state = {\r\n    newHouse: {\r\n      street: \"\",\r\n      city: this.props.match.params.location,\r\n      \"zip_code\": \"\",\r\n      \"province_county\": '',\r\n      country: \"\",\r\n      title: \"\",\r\n      description: \"\",\r\n      price: 0,\r\n      rooms: 0,\r\n      facilities: \"\",\r\n      host: \"\",\r\n      type: '',\r\n      img: ''\r\n    },\r\n  };\r\n  handleImages = async (e) => {\r\n    this.setState({ images: e.target.files[0] }, () =>\r\n      console.log(this.state.images)\r\n    );\r\n    let image = new FormData();\r\n    image.append(\"img\", this.state.images);\r\n    await this.setState({ img: image }, () => console.log(this.state.images));\r\n    try {\r\n      await fetch(\r\n        process.env.REACT_APP_BE_URL +\r\n          \"houses/\" +\r\n          this.props.match.params.location +\r\n          \"/\" +\r\n          this.props.match.params.id +\r\n          \"/upload\",\r\n        {\r\n          method: \"POST\",\r\n          body: this.state.img,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    if (\r\n      e.target.id !== \"street\" &&\r\n      e.target.id !== \"city\" &&\r\n      e.target.id !== \"zip code\" &&\r\n      e.target.id !== \"country\"\r\n    ) {\r\n      this.setState(\r\n        {\r\n          newHouse: {\r\n            ...this.state.newHouse,\r\n            [e.target.id]: e.currentTarget.value,\r\n          },\r\n        },\r\n        () => console.log(this.state.newHouse)\r\n      );\r\n    } else {\r\n      this.setState(\r\n        {\r\n          newHouse: {\r\n            ...this.state.newHouse,\r\n            address: {\r\n              ...this.state.newHouse.address,\r\n              [e.target.id]: e.currentTarget.value,\r\n            },\r\n          },\r\n        },\r\n        () => console.log(this.state.newHouse)\r\n      );\r\n    }\r\n  };\r\n\r\n  postHouse = async () => {\r\n    try {\r\n      const response = await fetch(process.env.REACT_APP_BE_URL + \"houses\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(this.state.newHouse),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {\" \"}\r\n        <Navigation />\r\n        <div className=\"add-wrap\">\r\n          <div className=\"form-wrap\">\r\n            <Form>\r\n              <h4>General info:</h4>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Name of the premise</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    id=\"title\"\r\n                    type=\"text\"\r\n                    placeholder=\"The small house\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Host name: </Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    id=\"host\"\r\n                    placeholder=\"John Doe\"\r\n                  />\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Group>\r\n                <Form.Label>Description: </Form.Label>\r\n                <Form.Control\r\n                  onChange={(e) => this.handleChange(e)}\r\n                  as=\"textarea\"\r\n                  placeholder=\"Describe your place...\"\r\n                  rows={5}\r\n                  id=\"description\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Price: </Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    type=\"number\"\r\n                    placeholder=\"xx/night\"\r\n                    id=\"price\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Rooms: </Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    type=\"number\"\r\n                    placeholder=\"2\"\r\n                    id=\"rooms\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Type:</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    as=\"select\"\r\n                    defaultValue=\"Apartment\"\r\n                    id=\"house\"\r\n                  >\r\n                    <option value=\"Apartment\">Apartment</option>\r\n                    <option value=\"House\">Independent House</option>\r\n                    <option value=\"Room\">Room</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Group>\r\n                <Form.Label>Facilities:</Form.Label>\r\n                <Form.Control\r\n                  onChange={(e) => this.handleChange(e)}\r\n                  as=\"textarea\"\r\n                  placeholder=\"List facilities, services next to the premise etc...\"\r\n                  rows={8}\r\n                  id=\"facilities\"\r\n                />\r\n              </Form.Group>\r\n              <h4>Address: </h4>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>Street</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    placeholder=\"1234 Main St\"\r\n                    id=\"street\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>City</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    placeholder=\"Milan, London...\"\r\n                    value={this.props.match.params.location}\r\n                    disabled\r\n                  />\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>ZIP</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    placeholder=\"0000, XXN NXX...\"\r\n                    type=\"text\"\r\n                    id=\"zip code\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group as={Col}>\r\n                  <Form.Label>State</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    type=\"text\"\r\n                    placeholder=\"Italy, UK, USA, France...\"\r\n                    id=\"country\"\r\n                  />\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Group>\r\n                <Form.Label>\r\n                  Add photos: (5 is the raccomended amount)\r\n                </Form.Label>{\" \"}\r\n                {/*unfortunately I could not make the multiple upload work on the\r\n                backend*/}\r\n                <Form>\r\n                  <Form.File.Input\r\n                    id=\"images\"\r\n                    label=\"Add an image here\"\r\n                    accept=\"image/x-png,image/gif,image/jpeg\"\r\n                    name=\"image\"\r\n                    enctype=\"multipart/form-data\"\r\n                    onChange={(e) => this.handleImages(e)}\r\n                  />\r\n                </Form>\r\n              </Form.Group>\r\n              <Button\r\n                variant=\"primary\"\r\n                className=\"add-btn\"\r\n                onClick={() => this.postHouse()}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(AddHouse);\r\n","C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\SearchForm.jsx",[],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Suggested.jsx",[],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Navigation.jsx",[],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Location-SearchBar.jsx",[],"C:\\Users\\Lidia\\Documents\\GitHub\\AirBnB\\src\\components\\Login.jsx",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":362,"column":9,"nodeType":"63","endLine":371,"endColumn":10},{"ruleId":"64","severity":1,"message":"65","line":3,"column":16,"nodeType":"66","messageId":"67","endLine":3,"endColumn":19},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]